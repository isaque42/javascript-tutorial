Boas práticas na programação:

1) Documentação
/**
 * Descrição do código (o que faz?)
 * @author Nome do autor do código
 * @link https://...
 */

2) Código limpo
- Não abusar de comentários

3) Nomeação:
   - Não usar caracteres especiais, espaço e acentos
   - Nomes de arquivos, variáveis, funções devem ser    escritos com a primeira letra em caixa baixa (letra minúscula), iniciar com caixa alta (letra maiúscula) apenas classes modelos.
   - definir nomes que tenham relação com o problema a ser resolvido.

4) Alinhamento (identação do código)

5) Quanto menos código usado para o problema melhor!

 ________________________________________________
 Comandos de terminal:

 cls ou clear (limpar a tela do terminal)
 node -v  (exibe a versão do node)
 cd pasta (entrar na pasta)
 cd .. (voltar um nível)
 dir ou ls (listar os arquivos e diretórios)
 node arquivo.js (executar um arquivo JavaScript)
 seta para cima (repete os comandos)
 <tab> completa o comandos

_________________________________________________
VSCode: Dicas
Combinação de teclas <alt><shift><f> //alinhamento
Mais dicas: VS Code: Produtividade Infinita (repositório)
_________________________________________________
JavaScript:

Características:
- Sentenças e não linhas de código
- ; é opcional
console.clear() //limpar a tela do console
console.log() //escrever no console
// comentários de linhas
Podemos usar aspas " " ou ' '
Não podemos usar aspas diferentes " ' ou ' "
Dica: Usar em textos "aspas"
      Usar em bibliotecas ou caminhos 'apóstrofe'

_________________________________________________
Operadores:

Observações:
- Regra de precedência
- % (não calcula porcentagem e sim o resto da divisão)
Ex:
    |  3
 10 |______
  1    3

10 / 3  //3.33
10 % 3  //resultado é 1

Comparadores de igualdade:
NÃO USAR == !=

Operadores lógicos:
Dica:
professorjosedeassis.github.io/simulador

________________________________________________
Estudo das variáveis:
- String (caracteres)
- Numéricas (números)
- Booleanas (verdadeiro ou falso)

Obs: No JS as variáveis são dinâmicamente tipadas
const (criar uma constante)
var ou let (criar uma variável)
ATENÇÃO!!! Não usar jamais o var

Tipagem dinâmica:
No JavaScript o tipo string é definico quando o contecúdo da variável estiver entre aspas ""

Variáveis numéricas podem ser números inteiros e não inteiros
Observação , (vírgula é um caractere e não número)
se necessário converter a entrada de dados de "," para "."
.replace(",",".")

Na entrada de dados númericos via terminal ou formulário é necessário converter para números
classe Number

__________________________________________________
Git e GitHub
Material de apoio:
https://www.youtube.com/playlist?list=PLbEOwbQR9lqzK14I7OOeREEIE4k6rjgIj

Configurando o git
 - Instalar o git
  -Abrir o git bash
  -git config --global user.name "seu nome"
  -git config --global user.email "seu email github"

git clone link_do_repositório (clonar o repositório na máquina local)

Observação: digitar os comandos na raiz do repositório
git status (verifica o status do repositório local em relação ao GitHub)
git add . (adiciona todas as alterações)
git commit -m "descrição das alterações"

__________________________________________________________________________________
NODE - Plataforma para uso do JS fora do browser(navegador)
 |_ V8 (google chromium)
 |_ bibliotecas c / c++
 |_ pacotes npm (node packager manager)
 npm ls (lista os pacotes)
 npm i ou npm install (instalaum pacote)
 npm r nome_do_pacote (remove o pacote)

 Pacote = Módulo = bibliotecas 
 Para usar um pacote é necessário fazer a importação no início do código (logo abaixo do cabeçalho de documentação)
 
 _____________________________________________________________________________________________________________________ 
 Algorítmo: "receita de bolo"

 Exemplo 1:
 Objetivo: Calcular a média de 2 notas

         nota 1 + nota 2
 média = ________________ 
                2

Variáveis: nota1,nota2,media

Entrada: nota1,nota2
Processamento: media = (nota1 + nota2) / 2 
Saída: media

________________________________________________
Exemplo 2:
Desenvolver um app modo cosole para cáculo de porcentagem:
Ex: 10% de 200 = 20
     x      y    valor

Algorítmo:     
2009(y) ------------ (y)100%
valor ----------  10%

valor x 100 = 200 x 10
         200(y) x (y)10             2000
valor = __________    valor = _____  valor = 20
            100               100

valor = (x * y) / 100

//variáveis
x,y,valor
//entrada
x,y

//Processamento
valor = (x * y) / 100

//Saída
valor

Exercício1 :
Desenvolver um app modo console para calcular o valor do desconto:
EX:
Valor total: 200.00
desconto: 5%
total com desconto: 190.00

valor com desconto = valor total -  desconto

// variáveis
total, desconto, valor,  totalDesconto

//Entrada
total, desconto

//processamento 1
valor = (desconto * total) / 100

//saída 1
valor

//processamento 2
totalDesconto = total - valor

//saída 2
totalDesconto

Exercício 2: Desenvolver um app no console para conersão de moeda (reals para euro)

cotação da moeda: 5.89

Para converter de real para euro, dividir o valor em reais pela cotação do euro

//variáveis
real, euro, total

//entrada
real, euro

//processamento 
total = real / euro

//saída
total







Exercício 2: Desenvolver um app no console para conersão de moeda (reals para dolar)

cotação da moeda: 5.50

Para converter de real para dolar, dividir o valor em reais pela cotação do dolar

//variáveis
real, dolar, total

//entrada
real, dolar

//processamento 
total = real / dolar

//saída
total
_____________________________________________________________________________________________________________________




